import{$ as l,a1 as p,R as n,S as y,r as m,cT as u}from"./index.1aec8a9e.js";import d from"./FeatureLayerView2D.9362aa7c.js";import"./definitions.cd8c5521.js";import"./LayerView.08947135.js";import"./utils.70270241.js";import"./Utils.f4549798.js";import"./number.6e30c64a.js";import"./enums.c60b1dad.js";import"./Texture.31b81047.js";import"./VertexElementDescriptor.2400a91d.js";import"./MaterialKey.6b40f542.js";import"./alignmentUtils.84250e5d.js";import"./schemaUtils.6e3045d0.js";import"./visualVariablesUtils.fed637e6.js";import"./createSymbolSchema.546cfe66.js";import"./CIMSymbolHelper.5061c0e8.js";import"./Rect.a122c453.js";import"./GeometryUtils.f3664fe1.js";import"./cimAnalyzer.5b8004f5.js";import"./quantizationUtils.00334c11.js";import"./ExpandedCIM.48914d35.js";import"./MD5.7323a015.js";import"./util.f079648c.js";import"./popupUtils.ab02a495.js";import"./RefreshableLayerView.ae43a6b6.js";function h(e,r){return!e.visible||e.minScale!==0&&r>e.minScale||e.maxScale!==0&&r<e.maxScale}let a=class extends d{initialize(){this.handles.add([n(()=>{var e;return(e=this.view)==null?void 0:e.viewpoint},()=>this._update(),y)])}_injectOverrides(e){let r=super._injectOverrides(e);const s=this.view.scale,t=this.layer.sublayers.filter(o=>h(o,s)).map(o=>o.subtypeCode);if(!t.length)return r;r=m(r)?r:new u().toJSON();const i=`NOT ${this.layer.subtypeField} IN (${t.join(",")})`;return r.where=r.where?`(${r.where}) AND (${i})`:i,r}_setLayersForFeature(e){const r=this.layer.fieldsIndex.get(this.layer.subtypeField),s=e.attributes[r.name],t=this.layer.sublayers.find(i=>i.subtypeCode===s);e.layer=t,e.sourceLayer=this.layer}_createSchemaConfig(){const e={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map(i=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:i.labelingInfo,labelsVisible:i.labelsVisible,renderer:i.renderer,subtypeCode:i.subtypeCode,orderBy:null}))},r=this.layer.sublayers.map(i=>i.subtypeCode).join(","),s=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${r})`:"1=2";let t=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";return t+=s,{...super._createSchemaConfig(),...e,definitionExpression:t}}};a=l([p("esri.views.2d.layers.SubtypeGroupLayerView2D")],a);const G=a;export{G as default};

import{$ as s,a0 as a,a1 as h,R as p,f as l,d8 as f,t as c,r as m}from"./index.1aec8a9e.js";import v from"./FeatureLayerView2D.9362aa7c.js";import{e as O}from"./util.f079648c.js";import"./definitions.cd8c5521.js";import"./LayerView.08947135.js";import"./utils.70270241.js";import"./Utils.f4549798.js";import"./number.6e30c64a.js";import"./enums.c60b1dad.js";import"./Texture.31b81047.js";import"./VertexElementDescriptor.2400a91d.js";import"./MaterialKey.6b40f542.js";import"./alignmentUtils.84250e5d.js";import"./schemaUtils.6e3045d0.js";import"./visualVariablesUtils.fed637e6.js";import"./createSymbolSchema.546cfe66.js";import"./CIMSymbolHelper.5061c0e8.js";import"./Rect.a122c453.js";import"./GeometryUtils.f3664fe1.js";import"./cimAnalyzer.5b8004f5.js";import"./quantizationUtils.00334c11.js";import"./ExpandedCIM.48914d35.js";import"./MD5.7323a015.js";import"./popupUtils.ab02a495.js";import"./RefreshableLayerView.ae43a6b6.js";function d(e,t){if(c(e)&&c(t))return null;const r={};return m(t)&&(r.geometry=t.toJSON()),m(e)&&(r.where=e),r}let o=class extends v{constructor(){super(...arguments),this._enabledDataReceived=!1,this.errorString=null,this.connectionStatus="disconnected"}initialize(){this.handles.add([p(()=>{var e;return(e=this.layer)==null?void 0:e.purgeOptions},()=>this._update()),p(()=>this.suspended,e=>{e?this._proxy.pauseStream():this._proxy.resumeStream()})])}get connectionError(){if(this.errorString)return new l("stream-controller",this.errorString)}on(e,t){e==="data-received"&&(this._enabledDataReceived=!0,this._proxy.enableEvent("data-received",!0));const r=super.on(e,t),i=this;return{remove(){r.remove(),e==="data-received"&&(i._proxy.closed||i.hasEventListener("data-received")||i._proxy.enableEvent("data-received",!1))}}}queryLatestObservations(e,t){if(!(this.layer.timeInfo.endField||this.layer.timeInfo.startField))throw new l("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return this._proxy.queryLatestObservations(this._cleanUpQuery(e),t).then(r=>{const i=f.fromJSON(r);return i.features.forEach(n=>{n.layer=this.layer,n.sourceLayer=this.layer}),i})}detach(){super.detach(),this.connectionStatus="disconnected"}_createClientOptions(){return{...super._createClientOptions(),setProperty:e=>{this.set(e.propertyName,e.value)}}}_createTileRendererHash(e){const t=`${JSON.stringify(this.layer.purgeOptions)}.${JSON.stringify(d(this.layer.definitionExpression,this.layer.geometryDefinition))})`;return super._createTileRendererHash(e)+t}async _createServiceOptions(){const e=this.layer,{objectIdField:t}=e,r=e.fields.map(u=>u.toJSON()),i=O(e.geometryType),n=e.timeInfo&&e.timeInfo.toJSON()||null,y=e.spatialReference?e.spatialReference.toJSON():null;return{type:"stream",fields:r,geometryType:i,objectIdField:t,timeInfo:n,source:this.layer.parsedUrl,serviceFilter:d(this.layer.definitionExpression,this.layer.geometryDefinition),purgeOptions:this.layer.purgeOptions.toJSON(),enableDataReceived:this._enabledDataReceived,spatialReference:y,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,updateInterval:this.layer.updateInterval,customParameters:e.customParameters}}};s([a()],o.prototype,"errorString",void 0),s([a({readOnly:!0})],o.prototype,"connectionError",null),s([a()],o.prototype,"connectionStatus",void 0),o=s([h("esri.views.2d.layers.StreamLayerView2D")],o);const B=o;export{B as default};

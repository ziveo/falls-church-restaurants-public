import{s as q,$ as s,a0 as o,a1 as v,a2 as D,p as k,cN as f,r as b,d7 as z,cE as T,t as P,dh as U,h as A,R as g,cK as _,U as M,cU as C,f as R,cY as O,a8 as E,di as N,dg as V,cs as S}from"./index.1aec8a9e.js";import{y as j,d as J}from"./RasterVFDisplayObject.9db70a08.js";import{f as L,u as G}from"./LayerView.08947135.js";import{a as H}from"./BaseGraphicContainer.6eacf902.js";import{n as W}from"./HighlightGraphicContainer.094b7925.js";import{f as K}from"./pixelUtils.12c2d689.js";import{t as Y}from"./BitmapContainer.fc247966.js";import{s as Q}from"./utils.70270241.js";import{i as X}from"./Bitmap.d1f7b11e.js";import{S as Z}from"./ExportStrategy.6de4bbcb.js";import{F as ee}from"./rasterProjectionHelper.4459290a.js";import{M as te,m as ie}from"./dataUtils.3560f96a.js";import{b as re,c as se}from"./WGLContainer.fd68a117.js";import{I as $}from"./Utils.f4549798.js";import{s as ae}from"./popupUtils.ab02a495.js";import{i as oe}from"./RefreshableLayerView.ae43a6b6.js";import"./VertexArrayObject.3d0c8ca2.js";import"./Texture.31b81047.js";import"./enums.c60b1dad.js";import"./VertexElementDescriptor.2400a91d.js";import"./CIMSymbolHelper.5061c0e8.js";import"./Rect.a122c453.js";import"./definitions.cd8c5521.js";import"./alignmentUtils.84250e5d.js";import"./number.6e30c64a.js";import"./GeometryUtils.f3664fe1.js";import"./normalizeUtilsSync.1e93a3ca.js";import"./projectionSupport.0265f92c.js";import"./json.8bd707cf.js";import"./FeatureContainer.a337d88c.js";import"./TileContainer.ed3aa87c.js";import"./visualVariablesUtils.5acc28b3.js";import"./visualVariablesUtils.fed637e6.js";import"./MaterialKey.6b40f542.js";import"./Matcher.9bec3cf4.js";import"./tileUtils.ad5507ae.js";import"./TileClipper.35e3bfd6.js";import"./Geometry.f2d62961.js";import"./GeometryUtils.b4d0dc88.js";import"./cimAnalyzer.5b8004f5.js";import"./quantizationUtils.00334c11.js";import"./earcut.f65e2fcc.js";import"./ExpandedCIM.48914d35.js";import"./schemaUtils.6e3045d0.js";import"./createSymbolSchema.546cfe66.js";import"./MD5.7323a015.js";import"./util.f079648c.js";import"./ComputedAttributeStorage.afe34cd5.js";import"./centroid.031e39f9.js";import"./vec3f32.ca7a14c1.js";import"./ProgramTemplate.7d35d3d8.js";import"./StyleDefinition.51d53a2e.js";import"./config.ded6d251.js";const ne=q.getLogger("esri.views.2d.layers.imagery.ImageryView2D");let h=class extends D{constructor(){super(...arguments),this.attached=!1,this.container=new Q,this.updateRequested=!1,this.type="imagery",this._bitmapView=new Y}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(e){this.strategy.update(e).catch(t=>{k(t)||ne.error(t)})}hitTest(e){return new f({attributes:{},geometry:e.clone(),layer:this.layer})}attach(){this.container.addChild(this._bitmapView);const e=this.layer.version>=10,t=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,i=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this.strategy=new Z({container:this._bitmapView,imageNormalizationSupported:e,imageMaxHeight:t,imageMaxWidth:i,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()})}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren(),this.updateRequested=!1}redraw(){this.strategy.updateExports(e=>{e.source instanceof HTMLImageElement?e.requestRender():this.layer.applyRenderer({pixelBlock:e.source.pixelBlock}).then(t=>{const i=e.source;i.pixelBlock=t.pixelBlock,i.filter=r=>this.layer.applyFilter(r),this.container.requestRender()})})}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const e=this.strategy.bitmaps;if(e.length===1&&e[0].source)return{extent:e[0].source.extent,pixelBlock:e[0].source.originalPixelBlock};if(e.length>1){const t=this.view.extent,i=e.map(a=>a.source).filter(a=>a.extent&&a.extent.intersects(t)).map(a=>({extent:a.extent,pixelBlock:a.originalPixelBlock})),r=K(i,t);return b(r)?{extent:r.extent,pixelBlock:r.pixelBlock}:null}return null}_fetchImage(e,t,i,r){return(r=r||{}).timeExtent=this.timeExtent,r.requestAsImageElement=!0,this.layer.fetchImage(e,t,i,r).then(a=>a.imageElement?a.imageElement:this.layer.applyRenderer(a.pixelData,{signal:r.signal}).then(n=>{const l=new X(n.pixelBlock,n.extent.clone(),a.pixelData.pixelBlock);return l.filter=u=>this.layer.applyFilter(u),l}))}};s([o()],h.prototype,"attached",void 0),s([o()],h.prototype,"container",void 0),s([o()],h.prototype,"layer",void 0),s([o()],h.prototype,"strategy",void 0),s([o()],h.prototype,"timeExtent",void 0),s([o()],h.prototype,"view",void 0),s([o()],h.prototype,"updateRequested",void 0),s([o()],h.prototype,"updating",null),s([o()],h.prototype,"type",void 0),h=s([v("esri.views.2d.layers.imagery.ImageryView2D")],h);const le=h;class he extends re{constructor(){super(...arguments),this.symbolTypes=["triangle"]}get requiresDedicatedFBO(){return!1}prepareRenderPasses(t){const i=t.registerRenderPass({name:"imagery (vf)",brushes:[se],target:()=>this.children,drawPhase:$.MAP});return[...super.prepareRenderPasses(t),i]}doRender(t){this.visible&&t.drawPhase===$.MAP&&this.symbolTypes.forEach(i=>{t.renderPass=i,super.doRender(t)})}}const pe=q.getLogger("esri.views.2d.layers.imagery.VectorFieldView2D");let y=class extends D{constructor(e){super(e),this.update=z((t,i)=>this._update(t,i).catch(r=>{k(r)||pe.error(r)}))}get updating(){return!!this._loading}redraw(e){if(!this.container.children.length)return;const t=this.container.children[0];t.symbolizerParameters=e,t.invalidateVAO(),this.container.symbolTypes=e.style==="wind_speed"?["scalar","triangle"]:e.style==="simple_scalar"?["scalar"]:["triangle"],this.container.requestRender()}async _update(e,t,i){if(!e.stationary)return;const{extent:r,spatialReference:a}=e.state,n=new T({xmin:r.xmin,ymin:r.ymin,xmax:r.xmax,ymax:r.ymax,spatialReference:a}),[l,u]=e.state.size;this._loading=this.fetchPixels(n,l,u,i);const d=await this._loading;this._addToDisplay(d,t,e.state),this._loading=null}_addToDisplay(e,t,i){if(P(e.pixelBlock))return this.container.children.forEach(l=>l.destroy()),void this.container.removeAllChildren();const{extent:r,pixelBlock:a}=e,n=new j(a);n.offset=[0,0],n.symbolizerParameters=t,n.rawPixelData=e,n.invalidateVAO(),n.x=r.xmin,n.y=r.ymax,n.pixelRatio=i.pixelRatio,n.rotation=i.rotation,n.resolution=i.resolution,n.width=a.width*t.symbolTileSize,n.height=a.height*t.symbolTileSize,this.container.children.forEach(l=>l.destroy()),this.container.removeAllChildren(),this.container.symbolTypes=t.style==="wind_speed"?["scalar","triangle"]:t.style==="simple_scalar"?["scalar"]:["triangle"],this.container.addChild(n)}};s([o()],y.prototype,"fetchPixels",void 0),s([o()],y.prototype,"container",void 0),s([o()],y.prototype,"_loading",void 0),s([o()],y.prototype,"updating",null),y=s([v("esri.views.2d.layers.imagery.ImageryVFStrategy")],y);const de=y;let p=class extends U{constructor(){super(...arguments),this.attached=!1,this.container=new he,this.type="imageryVF",this._dataParameters={exportParametersVersion:0,bbox:"",symbolTileSize:0,time:""},this._fetchpixels=async(e,t,i,r)=>{const a=await this._projectFullExtentPromise,{symbolTileSize:n}=this.layer.renderer,{extent:l,width:u,height:d}=te(e,t,i,n,a);if(b(a)&&!a.intersects(e))return{extent:l,pixelBlock:null};const c={bbox:`${l.xmin}, ${l.ymin}, ${l.xmax}, ${l.ymax}`,exportParametersVersion:this.layer.exportImageServiceParameters.version,symbolTileSize:n,time:JSON.stringify(this.timeExtent||"")};if(this._canReuseVectorFieldData(c)){const m=this.getPixelData();if(b(m)&&`${m.extent.xmin}, ${m.extent.ymin}, ${m.extent.xmax}, ${m.extent.ymax}`===c.bbox)return m}const{pixelData:x}=await this.layer.fetchImage(l,u,d,{timeExtent:this.timeExtent,requestAsImageElement:!1,signal:r});return this._dataParameters=c,P(x.pixelBlock)?{extent:l,pixelBlock:null}:{extent:l,pixelBlock:this.layer.rasterInfo.dataType==="vector-uv"?A(ie(x.pixelBlock,"vector-uv")):x.pixelBlock}}}get updating(){return!this.attached||this._strategy.updating}attach(){this._projectFullExtentPromise=this._getProjectedFullExtent(this.view.spatialReference),this._strategy=new de({container:this.container,fetchPixels:this._fetchpixels}),this.handles.add(g(()=>this.layer.renderer,e=>this._updateSymbolizerParams(e),_),"vector-field-view-update")}detach(){this._strategy.destroy(),this.container.children.forEach(e=>e.destroy()),this.container.removeAllChildren(),this.handles.remove("vector-field-view-update"),this._strategy=this.container=this._projectFullExtentPromise=null}getPixelData(){if(this.updating||!this.container.children.length)return null;const{extent:e,pixelBlock:t}=this.container.children[0].rawPixelData;return{extent:e,pixelBlock:t}}hitTest(e){return new f({attributes:{},geometry:e.clone(),layer:this.layer})}update(e){this._strategy.update(e,this._symbolizerParams)}redraw(){this._updateSymbolizerParams(this.layer.renderer),this._strategy.redraw(this._symbolizerParams)}_canReuseVectorFieldData(e){const t=this._dataParameters.exportParametersVersion===e.exportParametersVersion,i=this._dataParameters.time===e.time,r=this._dataParameters.symbolTileSize===e.symbolTileSize,a=this._dataParameters.bbox===e.bbox;return t&&i&&r&&a}async _getProjectedFullExtent(e){try{return await ee(this.layer.fullExtent,e)}catch{try{const i=(await M(this.layer.url,{query:{option:"footprints",outSR:e.wkid||JSON.stringify(e.toJSON()),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return i?T.fromJSON(i):null}catch{return null}}}_updateSymbolizerParams(e){e.type==="vector-field"&&(this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null}))}};s([o()],p.prototype,"attached",void 0),s([o()],p.prototype,"container",void 0),s([o()],p.prototype,"layer",void 0),s([o()],p.prototype,"timeExtent",void 0),s([o()],p.prototype,"type",void 0),s([o()],p.prototype,"view",void 0),s([o()],p.prototype,"updating",null),p=s([v("esri.views.2d.layers.imagery.VectorFieldView2D")],p);const ce=p,me=e=>{let t=class extends e{constructor(){super(...arguments),this.view=null}async fetchPopupFeatures(i,r){const{layer:a}=this;if(!i)throw new R("imagerylayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:a});const{popupEnabled:n}=a,l=ae(a,r);if(!n||P(l))throw new R("imagerylayerview:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:n,popupTemplate:l});const u=await l.getRequiredFields(),d=new O;d.timeExtent=this.timeExtent,d.geometry=i,d.outFields=u,d.outSpatialReference=i.spatialReference;const c=this.view.resolution,x=this.view.type==="2d"?new E(c,c,this.view.spatialReference):new E(.5*c,.5*c,this.view.spatialReference),{returnTopmostRaster:m,showNoDataRecords:B}=l.layerOptions||{returnTopmostRaster:!0,showNoDataRecords:!1},F={returnDomainValues:!0,returnTopmostRaster:m,pixelSize:x,showNoDataRecords:B,signal:b(r)?r.signal:null};return a.queryVisibleRasters(d,F).then(I=>I)}canResume(){var i;return!!super.canResume()&&!((i=this.timeExtent)!=null&&i.isEmpty)}};return s([o()],t.prototype,"layer",void 0),s([o()],t.prototype,"suspended",void 0),s([o(C)],t.prototype,"timeExtent",void 0),s([o()],t.prototype,"view",void 0),t=s([v("esri.views.layers.ImageryLayerView")],t),t};let w=class extends me(oe(L(G))){constructor(){super(...arguments),this._exportImageVersion=-1,this._highlightGraphics=new N,this.subview=null}get pixelData(){return this.updating?null:"getPixelData"in this.subview?this.subview.getPixelData():null}get updating(){return!!(!this.subview||"updating"in this.subview&&this.subview.updating)}async hitTest(e,t){return this.subview?[{type:"graphic",graphic:this.subview.hitTest(e),layer:this.layer,mapPoint:e}]:null}update(e){var t;(t=this.subview)==null||t.update(e)}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.view&&(this._highlightView=new H({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new W(this.view.featuresTilingScheme)}),this.container.addChild(this._highlightView.container)),this.handles.add([g(()=>{var e;return(e=this.layer.blendMode)!=null?e:"normal"},e=>this.subview.container.blendMode=e,_),g(()=>{var e;return(e=this.layer.effect)!=null?e:null},e=>this.subview.container.effect=e,_),g(()=>this.layer.exportImageServiceParameters.version,e=>{e&&this._exportImageVersion!==e&&(this._exportImageVersion=e,this.requestUpdate())},V),g(()=>this.timeExtent,e=>{this.subview.timeExtent=e,"redraw"in this.subview?this.requestUpdate():this.subview.redrawOrRefetch()},V),this.layer.on("redraw",()=>{"redraw"in this.subview?this.subview.redraw():this.subview.redrawOrRefetch()}),g(()=>this.layer.renderer,()=>this._setSubView())],"imagerylayerview-update")}detach(){var e,t;this.layer.decreaseRasterJobHandlerUsage(),this.container.removeAllChildren(),this._detachSubview(this.subview),(e=this.subview)==null||e.destroy(),this.handles.remove("imagerylayerview-update"),this.subview=null,(t=this._highlightView)==null||t.destroy(),this._exportImageVersion=-1}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}highlight(e,t){if(!((Array.isArray(e)?e[0]:S.isCollection(e)?e.getItemAt(0):e)instanceof f))return{remove:()=>{}};let i=[];return Array.isArray(e)||S.isCollection(e)?i=e.map(r=>r.clone()):e instanceof f&&(i=[e.clone()]),this._highlightGraphics.addMany(i),{remove:()=>{this._highlightGraphics.removeMany(i)}}}async doRefresh(){this.requestUpdate()}isUpdating(){return!this.subview||this.subview.updating}_setSubView(){var i,r;if(!this.view)return;const e=(i=this.layer.renderer)==null?void 0:i.type;let t="imagery";if(e==="vector-field"?t="imageryVF":e==="flow"&&(t="flow"),this.subview){if(this.subview.type===t)return this._attachSubview(this.subview),void(this.subview.type==="flow"&&this.subview.redrawOrRefetch());this._detachSubview(this.subview),(r=this.subview)==null||r.destroy()}this.subview=t==="imagery"?new le({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):t==="imageryVF"?new ce({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):new J({layer:this.layer,layerView:this}),this._attachSubview(this.subview),this.requestUpdate()}_attachSubview(e){e&&!e.attached&&(e.attach(),e.attached=!0,this.container.addChildAt(e.container,0),e.container.blendMode=this.layer.blendMode,e.container.effect=this.layer.effect)}_detachSubview(e){e!=null&&e.attached&&(this.container.removeChild(e.container),e.detach(),e.attached=!1)}};s([o()],w.prototype,"pixelData",null),s([o({readOnly:!0})],w.prototype,"updating",null),s([o()],w.prototype,"subview",void 0),w=s([v("esri.views.2d.layers.ImageryLayerView2D")],w);const mt=w;export{mt as default};
